def fifo_page_replacement(pages, capacity):
    frame = []
    page_faults = 0
    page_hits = 0
    step_result = []
    removed_pages = []

    for i, page in enumerate(pages):
        if page not in frame:
            if len(frame) < capacity:
                frame.append(page)
            else:
                removed_page = frame.pop(0)
                frame.append(page)
                removed_pages.append(removed_page)
            page_faults += 1
            status = "Miss"
        else:
            page_hits += 1
            status = "Hit"

        step_result.append(f"Step {i + 1}: {frame}  --> {status}")

    hit_ratio = page_hits / len(pages)
    miss_ratio = page_faults / len(pages)

    step_result.append(f"\nTotal Page Faults: {page_faults}")
    step_result.append(f"\nTotal Hits: {page_hits}")
    step_result.append(f"\nHit Ratio: {hit_ratio:.2f}")
    step_result.append(f"\nMiss Ratio: {miss_ratio:.2f}")
    step_result.append(f"\nSwap Memory (Removed Pages): {removed_pages}")

    return "\n".join(step_result), page_faults, page_hits, hit_ratio, miss_ratio, removed_pages

# LRU Page Replacement
def lru_page_replacement(pages, capacity):
    frame = []
    page_faults = 0
    page_hits = 0
    step_result = []
    recent_use = {}
    removed_pages = []

    for i, page in enumerate(pages):
        if page not in frame:
            if len(frame) < capacity:
                frame.append(page)
            else:
                lru_page = min(frame, key=lambda p: recent_use[p])
                frame.remove(lru_page)
                removed_pages.append(lru_page)
                frame.append(page)
            page_faults += 1
            status = "Miss"
        else:
            page_hits += 1
            status = "Hit"

        recent_use[page] = i
        step_result.append(f"Step {i + 1}: {frame}  --> {status}")

    hit_ratio = page_hits / len(pages)
    miss_ratio = page_faults / len(pages)

    step_result.append(f"\nTotal Page Faults: {page_faults}")
    step_result.append(f"\nTotal Hits: {page_hits}")
    step_result.append(f"\nHit Ratio: {hit_ratio:.2f}")
    step_result.append(f"\nMiss Ratio: {miss_ratio:.2f}")
    step_result.append(f"\nSwap Memory (Removed Pages): {removed_pages}")

    return "\n".join(step_result), page_faults, page_hits, hit_ratio, miss_ratio, removed_pages
